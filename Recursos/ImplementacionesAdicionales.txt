////Para DAOBase

public int EjecutarProcedimientoDML(String procedure, Object modelo, Action<DbCommand, Object> añadirParametro, int tipo)
{

	using (DbConnection conn = DBManager.Instance.Connection)
	{
		DbCommand comando = conn.CreateCommand();
		comando.CommandType = CommandType.StoredProcedure;
		comando.CommandText = procedure;
		int n;
		try
		{
			conn.Open();
			if (añadirParametros != null)
				añadirParametros(comando, modelo);
			n = comando.ExecuteNonQuery();
			//Tipo:   0: Insert    1:Update    2:Delete
			if (n == 0)
			{
				Console.Error.WriteLine("No hubo en ningún registro");
				return -1;
			}
			if (tipo == 0)
				return 1; //RetornarUltimoAutoGenerado
			else
				return n;
		}
		catch (DbException e)
		{
			Console.Error.WriteLine("Error SQL: " + e.Message);
			throw new Exception("Error SQL", e);
		}
		catch (Exception e)
		{
			Console.Error.WriteLine("Error inesperado: " + e.Message);
			throw;
		}
	}

}

public BindingList<Object> EjecutarProcedimientoSelect(String procedure, Object modelo, Action<DbCommand, Object> añadirParametros)
{
	using (DbConnection conn = DBManager.Instance.Connection)
	{
		DbCommand comando = conn.CreateCommand();
		comando.CommandType = CommandType.StoredProcedure;
		comando.CommandText = procedure;

		try
		{
			conn.Open();
			if (añadirParametros != null)
				añadirParametros(comando, modelo);
			DbDataReader reader = comando.ExecuteReader();

			BindingList<Object> lista = new BindingList<Object>();

			while (reader.Read())
			{
				this.AgregarObjetoALaLista(lista, reader); //InstaciarObjetos
			}

			return lista;
		}
		catch (DbException e)
		{
			Console.Error.WriteLine("Error SQL: " + e.Message);
			throw new Exception("Error SQL", e);
		}
		catch (Exception e)
		{
			Console.Error.WriteLine("Error inesperado: " + e.Message);
			throw;
		}
	}
}
	
protected void AgregarParametroSalida(DbCommand cmd, string nombre, DbType tipo) {
    DbParameter param = cmd.CreateParameter();
    param.ParameterName = nombre;
    param.DbType = tipo;
    param.Direction = ParameterDirection.Output;
    cmd.Parameters.Add(param);
}

//DAOBase

private int RetornarUltimoAutoGenerado()
        {
            int resultado = -1;
            String sql = DBManager.Instance.RetornarSQLParaUltimoAutoGenerado();
            this.ColocarSQLenComando(sql);
            this.EjecutarConsultaEnBD();

            if (this.lector.Read())
            {
                resultado = Convert.ToInt32(this.lector[0]);
            }

            ///if (this.lector.Read())
            //{
            //    resultado = this.lector.GetInt32(0);
            //}
            this.lector.Close();
            return resultado;
        }